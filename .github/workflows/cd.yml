# Continuous Deployment workflow for GitHub Pages, IPFS, and Cloudflare Web3 Gateway
name: "CD"

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  cancel-in-progress: false
  group: "pages"

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: "read"
  pages: "write"
  id-token: "write"

on:
  # Can be manually triggered by any member with Write permission
  workflow_dispatch:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

jobs:
  # Run the JS tests
  test-js:
    uses: "./.github/workflows/ci-test.yml"

  # Deploy to GitHub Pages, IPFS, and Cloudflare Web3 Gateway
  deploy:
    environment:
      name: "Production"
      url: ${{ steps.pages-deployment.outputs.page_url }}
    needs: ["test-js"]
    runs-on: "ubuntu-latest"

    steps:
      # ----- Setup and Build -----
      - name: "Check out the repo"
        uses: "actions/checkout@v4"

      - name: "Install Bun"
        uses: "oven-sh/setup-bun@v1"

      - name: "Install the Node.js dependencies"
        run: "bun install --frozen-lockfile"

      - name: "Build the website"
        run: "bun run build"

      # ----- GitHub Pages Deployment -----
      - name: "Set up GitHub Pages"
        uses: "actions/configure-pages@v5"

      - name: "Upload build directory as artifact"
        uses: "actions/upload-pages-artifact@v3"
        with:
          path: "./build"

      - name: "Deploy to GitHub Pages"
        id: "pages-deployment"
        uses: "actions/deploy-pages@v4"

      # ----- IPFS Deployment -----
      - name: "Deploy and pin bundle to IPFS"
        id: "ipfs-deployment"
        uses: "anantaramdas/ipfs-pinata-deploy-action@a551f37c17ec3961df7c3ad52e1cd266dfd3d7e7"
        with:
          path: "./build/tokenlist.json"
          pin-name: "Sablier Solana Token List"
          pinata-api-key: ${{ secrets.PINATA_API_KEY }}
          pinata-secret-api-key: ${{ secrets.PINATA_API_SECRET_KEY }}

      - name: "IPFS hash summary"
        run: |
          HASH="${{ steps.ipfs-deployment.outputs.hash }}"
          URL="https://cloudflare-ipfs.com/ipfs/$HASH"
          echo "Successfully deployed on IPFS: [$HASH]($URL)"

      # ----- Cloudflare Deployment -----
      - name: "Deploy to Cloudflare Web3 Gateway"
        uses: "Uniswap/cloudflare-update-web3-gateway@master"
        env:
          CLOUDFLARE_GATEWAY_ID: ${{ secrets.CLOUDFLARE_GATEWAY_ID }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        with:
          cid: ${{ steps.ipfs-deployment.outputs.hash }}

      # ----- Summary -----
      - name: "Add summary"
        run: |
          echo "## Continuous Deployment result" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Passed" >> $GITHUB_STEP_SUMMARY
